/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    ListNode answer;
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        if(l1== null && l2== null) return answer;
        answer = merge(l1,l2,answer);
        return answer;
    }    
    
    ListNode merge(ListNode l1, ListNode l2, ListNode ans){
        
        if(l1== null && l2== null) return ans;
        if(l1 == null) {
            ans = new ListNode(l2.val);
            ans.next = merge(l1, l2.next, ans.next);
            
        }else if(l2 == null){
            ans = new ListNode(l1.val);
            
            ans.next = merge(l1.next, l2, ans.next);
        }else if(l1.val < l2.val) {
            ans = new ListNode(l1.val);
            ans.next = merge(l1.next, l2, ans.next);
            
        } else {
            ans = new ListNode(l2.val);
            ans.next = merge(l1, l2.next, ans.next);
        }
        
        return ans;
        
    }
    
}